version: 2.1

commands:
            
jobs:
  build-frontend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: front-end build
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build 

  build-backend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
             # Your code here
             exit 1
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-frontend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Run frontend test
          command: |
            cd frontend
            npm install
            npm run test
                
  test-backend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Run frontend test
          command: |
            cd frontend
            npm install
            npm run test
            
  scan-frontend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Scan frontend dependencies
          command: |
            cd frontend
            npm install
            npm audit fix --force --audit-level=critical
            npm audit fix --force --audit-level=critical
            npm audit fix --force --audit-level=critical
            npm audit --audit-level=critical

  scan-backend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Scan backend dependencies
          command: |
            cd backend
            npm install
            npm audit --force --audit-level=critical
            npm audit --force --audit-level=critical
    
  build-frontend-image:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - setup_remote_docker
      - run:
          name: Build and push docker image
          command: |
            cd frontend
            docker build -t soezeh/udafrontend:${CIRCLE_WORKFLOW_ID:0:7} .
            echo "$DOCKERHUB_PASSWORD" | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push soezeh/udafrontend:${CIRCLE_WORKFLOW_ID:0:7}
      - run:
          name: Configure git
          command: |
            git config --global user.name "CircleCI bot"
            git config --global user.email "ci@circleci.com"
      - run: 
          name: Update deployment manifest
          command: |
            git clone https://github.com/SokEarth/cicd-source.git
            sed -i "s|tag: .*|tag: ${CIRCLE_WORKFLOW_ID:0:7}" chart/values.yaml
            cd cicd-source
            git commit -am "Update image tag to ${CIRCLE_WORKFLOW_ID:0:7}"
            git push -q https://$GH_TOKEN@github.com/SokEarth/cicd-source.git main
            
workflows:
  default:
    jobs:
      - build-frontend
      # - build-backend
      # - test-frontend:
      #     requires: [build-frontend]
      # - test-backend:
      #     requires: [build-backend]
      # - scan-backend:
      #     requires: [build-backend]
      # - scan-frontend:
      #     requires: [build-frontend]
      # - build-frontend-image:
      #     requires: [test-frontend, test-backend, scan-frontend, scan-backend]
      - build-frontend-image:
          requires: [build-frontend]